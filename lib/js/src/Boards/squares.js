// Generated by BUCKLESCRIPT VERSION 1.7.4, PLEASE EDIT WITH CARE
'use strict';


function adjacent() {
  return /* :: */[
          /* tuple */[
            -1,
            0
          ],
          /* :: */[
            /* tuple */[
              1,
              0
            ],
            /* :: */[
              /* tuple */[
                0,
                -1
              ],
              /* :: */[
                /* tuple */[
                  0,
                  1
                ],
                /* [] */0
              ]
            ]
          ]
        ];
}

function to_direction(param) {
  var dy = param[1];
  var switcher = param[0] + 1 | 0;
  if (switcher > 2 || switcher < 0) {
    return /* None */0;
  } else {
    switch (switcher) {
      case 0 : 
          if (dy !== 0) {
            return /* None */0;
          } else {
            return /* Some */[/* Left */2];
          }
      case 1 : 
          var switcher$1 = dy + 1 | 0;
          if (switcher$1 > 2 || switcher$1 < 0) {
            return /* None */0;
          } else {
            switch (switcher$1) {
              case 0 : 
                  return /* Some */[/* Up */0];
              case 1 : 
                  return /* None */0;
              case 2 : 
                  return /* Some */[/* Down */1];
              
            }
          }
          break;
      case 2 : 
          if (dy !== 0) {
            return /* None */0;
          } else {
            return /* Some */[/* Right */3];
          }
      
    }
  }
}

function wall_in_direction(direction) {
  var pts;
  switch (direction) {
    case 0 : 
        pts = /* tuple */[
          /* tuple */[
            -0.5,
            -0.5
          ],
          /* tuple */[
            0.5,
            -0.5
          ]
        ];
        break;
    case 1 : 
        pts = /* tuple */[
          /* tuple */[
            -0.5,
            0.5
          ],
          /* tuple */[
            0.5,
            0.5
          ]
        ];
        break;
    case 2 : 
        pts = /* tuple */[
          /* tuple */[
            -0.5,
            -0.5
          ],
          /* tuple */[
            -0.5,
            0.5
          ]
        ];
        break;
    case 3 : 
        pts = /* tuple */[
          /* tuple */[
            0.5,
            -0.5
          ],
          /* tuple */[
            0.5,
            0.5
          ]
        ];
        break;
    
  }
  return /* Line */[pts];
}

exports.adjacent          = adjacent;
exports.to_direction      = to_direction;
exports.wall_in_direction = wall_in_direction;
/* No side effect */
